apiVersion: apps/v1
kind: Deployment
metadata:
  name: staging-auth-flapi-deployment
  namespace: staging-auth-flapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: staging-auth-flapi
  template:
    metadata:
      labels:
        app: staging-auth-flapi
    spec:
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            /opt/keycloak/bin/kc.sh build &&
            /opt/keycloak/bin/kc.sh start --optimized \
            --db-url=jdbc:mariadb://109.234.165.225:3306/reco5282_auth_flapi_staging \
            --db-username=$(KC_DB_USERNAME) \
            --db-password=$(KC_DB_PASSWORD) \
            --hostname=staging.auth.flapi.org \
            --hostname-strict=false \
            --proxy-headers=xforwarded \
            --http-enabled=true \
            --http-port=8080
        env:
        - name: KC_PROXY
          value: "edge"
        - name: KC_DB
          value: "mariadb"
        - name: KC_DB_URL
          value: "jdbc:mariadb://109.234.165.225:3306/reco5282_auth_flapi_staging"
        - name: KC_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: staging-auth-flapi-db-secret
              key: DB_USER
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: staging-auth-flapi-db-secret
              key: DB_PASSWORD
        - name: KC_HOSTNAME
          value: "staging.auth.flapi.org"
        - name: KC_BOOTSTRAP_ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: staging-auth-flapi-keycloack-admin-secret
              key: KEYCLOAK_ADMIN
        - name: KC_BOOTSTRAP_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: staging-auth-flapi-keycloack-admin-secret
              key: KEYCLOAK_ADMIN_PASSWORD
        - name: KC_HOSTNAME_ADMIN_URL
          value: "https://staging.auth.flapi.org"
        - name: KC_HTTP_ENABLED
          value: "true"
        ports:
        - containerPort: 8080